#include "TileMapEntity.h"

#include "..\Graphics\Graphics.h"



TileMapEntity::TileMapEntity(std::string tilename, int tInCol, int tInRow, int w, int h)
{

	name = tilename;
	textureWidth = w;
	textureHeight = h;
	tilesInCol = tInCol;
	tilesInRow = tInRow;
	isCollidable = false;
	height = textureHeight / tilesInRow;
	width = textureWidth / tilesInCol;
	entityType = Type::Map;
}

void TileMapEntity::MakeTile()
{
	int id = 1;

	for (int y = 0; y < tilesInRow; y++)
	{
		for (int x = 0; x < tilesInCol; x++)
		{
			Tile * tile = new Tile(std::to_string(id), 0, 0, x, y, false);
			tileset.insert(std::pair<int, Tile*>(id, tile));
			id++;
		}
	}

}

void TileMapEntity::CreateTileMap()
{

	int map[50][50] = {  
		{284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284 },
		{284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284									  },
		{284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284													  },
		{284,284,284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284															  },
		{284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284																  },
		{284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284																  },
		{284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284																  },
		{284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284																  },
		{284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284																  },
		{284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284																  },
		{284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284																	  },
		{284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,1,1,1,1,1,1,284,1,1,1,1,1,1,1,1,1,284,284,284																	  },
		{284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,1,1,1,1,284,284,284,284,284,1,1,1,1,1,1,1,284,284,284																  },
		{284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,1,1,1,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284													  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284												  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284													  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,284,284,284,284,162,162,162,162,162,284,284,284,284,284													  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,284,284,162,162,162,162,162,162,162,284,284,284,284														  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,284,284,162,162,162,162,162,162,162,162,284,284,284,284														  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,284,162,162,162,162,162,162,162,162,162,284,284,284,284														  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,162,162,162,162,162,162,162,162,162,162,284,284,284,284														  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284														  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284														  },
		{284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284														  },
		{284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284													  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284													  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284													  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284													  },
		{284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284															  },
		{284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284															  },
		{284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284														  },
		{284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284													  },
		{284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284													  },
		{284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284												  },
		{284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284											  },
		{284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284										  },
		{284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284										  },
		{284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284									  },
		{284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284								  },
		{284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284							  },
		{284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284							  },
		{284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284						  },
		{284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284						  },
		{284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284,284,284						  },
		{284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284,284,284,284					  },
		{284,284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284,284,284,284			  },
		{284,284,284,284,284,284,284,284,284,284,284,284,284,1,1,1,1,1,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284,284,284,284			  },
		{284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,1,1,162,162,284,284,284,284,162,162,162,162,162,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284,284,284,284	  },
		{284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,162,162,162,162,162,162,162,162,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284 },
		{284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284  }
	};


	for (int y = 0; y < 50; y++)
	{
		for (int x = 0; x < 50; x++)
		{

			if (map[y][x] == 284)
			{
				tileset.at(map[y][x])->isCollidable = true ;
			}


			tilemap.push_back(new Tile(tileset.at(map[y][x])->name, x * width, y * height,
				(float)tileset.at(map[y][x])->texturePos.x, (float)tileset.at(map[y][x])->texturePos.y,
				tileset.at(map[y][x])->isCollidable));

		}
	}
}

void TileMapEntity::Update()
{
	for each (Tile* t in tilemap)
	{
		CreateCollisionBox(t->position.x, t->position.y, width, height, t);
	}
}

void const TileMapEntity::Render(Graphics * g)
{
	for each ( Tile* t in tilemap)
	{
		g->Draw(name, RenderType::TILE, 4, 3, t->position.x, t->position.y, t->texturePos );
	}
}

void TileMapEntity::CreateCollisionBox(int x, int y, int width, int height)
{
}

void TileMapEntity::CreateCollisionBox(int x, int y, int width, int height, Tile *t)
{
	
	t->collisionBox.left = x;
	t->collisionBox.top = y;
	t->collisionBox.right = x + width;
	t->collisionBox.bottom = y + height;
	
}

TileMapEntity::~TileMapEntity()
{
	for (auto & t : tileset)
		delete t.second;

	for (auto & t : tilemap)
		delete t;

}
